// src/components/demo/StepByStepGuide.tsx
import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronRight, ChevronDown, Map, Layers, Globe, Target, ArrowRight, Info, X } from 'lucide-react';

interface StepByStepGuideProps {
  currentSection: 'macro' | 'department' | 'memory' | 'center';
  selectedMacro: string | null;
  currentStep: number;
  onSkipDemo: () => void;
}

const StepByStepGuide: React.FC<StepByStepGuideProps> = ({ 
  currentSection, 
  selectedMacro, 
  currentStep,
  onSkipDemo
}) => {
  const [currentGuideStep, setCurrentGuideStep] = useState(0);

  // Avanzar al siguiente paso autom√°ticamente cuando cambia currentSection
  useEffect(() => {
    if (currentSection === 'macro') setCurrentGuideStep(0);
    if (currentSection === 'department') setCurrentGuideStep(1);
    if (currentSection === 'memory') setCurrentGuideStep(2);
    if (currentSection === 'center') setCurrentGuideStep(3);
  }, [currentSection]);

  // Gu√≠a detallada para cada paso
  const guideSteps = [
    {
      title: "Paso 1: Selecciona una Macroregi√≥n",
      content: [
        "El Mapa de Memoria Hist√≥rica te permite explorar lugares significativos en la construcci√≥n de paz y memoria en Colombia.",
        "",
        "En el c√≠rculo interior del men√∫ radial encontrar√°s las 5 macroregiones de Colombia:",
        "‚Ä¢ Regi√≥n Andina: Centro monta√±oso del pa√≠s",
        "‚Ä¢ Regi√≥n Caribe: Costa norte de Colombia",
        "‚Ä¢ Regi√≥n Pac√≠fica: Costa occidental",
        "‚Ä¢ Regi√≥n Amazon√≠a: Selva tropical al sur",
        "‚Ä¢ Regi√≥n Orinoqu√≠a: Llanos orientales",
        "",
        "üëâ Haz clic en cualquier segmento para seleccionar esa regi√≥n"
      ],
      highlightSection: 'macro',
      icon: <Globe className="w-6 h-6 text-gray-300" />,
      arrow: <ArrowRight className="absolute -left-20 top-1/2 transform -rotate-45 text-gray-300 w-12 h-12 animate-pulse" />
    },
    {
      title: "Paso 2: Explora los Departamentos",
      content: [
        "El c√≠rculo intermedio muestra los departamentos de la macroregi√≥n seleccionada.",
        "",
        "Cada departamento contiene diferentes lugares de memoria hist√≥rica documentados.",
        "",
        "üëâ Haz clic en un departamento para filtrar los lugares de memoria espec√≠ficos de esa zona"
      ],
      highlightSection: 'department',
      icon: <Map className="w-6 h-6 text-gray-300" />,
      arrow: <ArrowRight className="absolute -left-20 top-1/2 transform -rotate-135 text-gray-300 w-12 h-12 animate-pulse" />
    },
    {
      title: "Paso 3: Categor√≠as de Memoria",
      content: [
        "El c√≠rculo exterior muestra los tipos de lugares de memoria:",
        "",
        "‚Ä¢ Caracterizados: Sitios completamente documentados",
        "‚Ä¢ Identificados: Sitios en proceso de investigaci√≥n",
        "‚Ä¢ En Solicitud: Lugares propuestos para investigaci√≥n",
        "‚Ä¢ Lugares del Horror: Sitios donde ocurrieron violaciones a DDHH",
        "‚Ä¢ Espacios de Sanaci√≥n: Lugares dedicados a la reconciliaci√≥n",
        "",
        "üëâ Selecciona un tipo para filtrar por esa categor√≠a"
      ],
      highlightSection: 'memory',
      icon: <Layers className="w-6 h-6 text-gray-300" />,
      arrow: <ArrowRight className="absolute -left-20 bottom-1/2 transform rotate-45 text-gray-300 w-12 h-12 animate-pulse" />
    },
    {
      title: "Paso 4: Centro del Men√∫",
      content: [
        "El bot√≥n central del men√∫ radial te permite iniciar un recorrido guiado por los lugares m√°s significativos de memoria hist√≥rica de Colombia.",
        "",
        "Este tour te llevar√° por varios sitios emblem√°ticos con informaci√≥n detallada sobre cada uno.",
        "",
        "üëâ Haz clic en el centro para iniciar el recorrido guiado"
      ],
      highlightSection: 'center',
      icon: <Target className="w-6 h-6 text-gray-300" />,
      arrow: <ChevronDown className="absolute -left-10 bottom-1/3 transform -rotate-90 text-gray-300 w-12 h-12 animate-pulse" />
    }
  ];

  const currentGuide = guideSteps[currentGuideStep];

  // Funci√≥n para avanzar al siguiente paso de la gu√≠a manualmente
  const handleNextStep = () => {
    if (currentGuideStep < guideSteps.length - 1) {
      setCurrentGuideStep(currentGuideStep + 1);
    } else {
      setCurrentGuideStep(0); // Volver al primer paso al llegar al final
    }
  };

  return (
    <motion.div
      initial={{ opacity: 0, x: 50 }}
      animate={{ opacity: 1, x: 0 }}
      exit={{ opacity: 0, x: 50 }}
      transition={{ duration: 0.5, ease: [0.19, 1, 0.22, 1] }}
      className="absolute right-8 top-1/2 transform -translate-y-1/2 max-w-sm w-full z-[9999]"
    >
      <div className="bg-black/80 backdrop-blur-md rounded-xl overflow-hidden shadow-2xl border border-white/15">
        <div className="relative">
          {/* Header con t√≠tulo */}
          <div className="px-5 py-4 border-b border-white/10 flex justify-between items-center bg-gradient-to-r from-gray-500/20 to-transparent">
            <div className="flex items-center gap-3">
              {currentGuide.icon}
              <h3 className="text-white font-bold text-lg">
                {currentGuide.title}
              </h3>
            </div>
            <button 
              onClick={onSkipDemo}
              className="text-white/60 hover:text-white transition-colors"
              title="Saltar tutorial"
            >
              <X size={18} />
            </button>
          </div>
          
          {/* Contenido */}
          <div className="p-5">
            {currentGuide.content.map((line, index) => (
              <p key={index} className={`text-white/90 ${line === "" ? "mb-2" : "mb-1"} ${line.startsWith("üëâ") ? "font-bold text-gray-300 mt-2" : ""} ${line.startsWith("‚Ä¢") ? "ml-2" : ""}`}>
                {line}
              </p>
            ))}
          </div>
          
          {/* Footer con botones de navegaci√≥n */}
          <div className="px-5 py-4 border-t border-white/10 flex justify-between items-center">
            {/* Indicadores de progreso */}
            <div className="flex gap-1">
              {guideSteps.map((_, index) => (
                <div 
                  key={index}
                  className={`h-1.5 rounded-full transition-all ${
                    index === currentGuideStep ? 'w-6 bg-gray-300' : 'w-1.5 bg-white/20'
                  }`}
                />
              ))}
            </div>
            
            <div className="flex gap-2">
              {/* Bot√≥n para avanzar al siguiente paso */}
              <button
                onClick={handleNextStep}
                className="bg-white/10 hover:bg-white/20 text-white px-3 py-1.5 rounded flex items-center gap-1 transition-colors"
              >
                Siguiente
                <ChevronRight size={16} />
              </button>
              
              {/* Bot√≥n saltar al mapa */}
              <button
                onClick={onSkipDemo}
                className="bg-gray-500 hover:bg-gray-600 text-white font-medium px-4 py-1.5 rounded flex items-center gap-2 transition-colors shadow-md"
              >
                <span>IR AL MAPA</span>
                <ChevronRight size={16} />
              </button>
            </div>
          </div>
          
          {/* Flecha animada que apunta a la secci√≥n relevante */}
          {currentGuide.arrow}
        </div>
      </div>
    </motion.div>
  );
};

export default StepByStepGuide;